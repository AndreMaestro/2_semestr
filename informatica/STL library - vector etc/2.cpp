/*–î–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª. –í—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –ó–∞–º–µ–Ω–∏—Ç—å —á–∏—Å–ª–∞, –ø–æ–ø–∞–¥–∞—é—â–∏–µ –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª [ùëé, ùëè] —á–∏—Å–ª–æ–º ùëã. –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã. –í—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º. –í—Å—Ç–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–µ—Ü –∏ –ø–æ—Ç–æ–º –æ–ø—è—Ç—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å - –Ω–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ). –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã.*/

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n, d, a, b, x, s;
    cout << "–í–≤–µ–¥–∏—Ç–µ n: "; cin >> n;

    /*---------*/
    vector<int> v;
    for(int i = 0; i < n; i++){
        cin >> d;
        v.push_back(d);
    }

    /*---------*/
    vector<int> v2 = v;
    for(int i = 0; i < n; i++){
        if (v.empty()) return 0;
        else{
            cout << v2.back() << " ";
            v2.pop_back();
        }
    }
    cout << endl;

    /*---------*/
    vector<int> v3 = v;
    cout << "–í–≤–µ–¥–∏—Ç–µ a: "; cin >> a;
    cout << "–í–≤–µ–¥–∏—Ç–µ b: "; cin >> b;
    cout << "–í–≤–µ–¥–∏—Ç–µ x: "; cin >> x;
    auto it = v3.cbegin();
    for(int i = 0; i < n; i++){
        if (v3[i] >= a && v3[i] <= b){
            v3.erase(it + i);
            v3.insert(it + i, x);
        } 
    }
    for(vector<int>::iterator it = v3.begin(); it != v3.end(); it++){
        cout << *it << " ";
    }
    cout << "\n";

    /*---------*/
    cout <<"–í–≤–µ–¥–∏—Ç–µ s: "; cin >> s;
    vector<int> v4 = v;
    sort(v4.begin(), v4.end());
    auto iter = lower_bound(v4.begin(), v4.end(), s);
    v4.insert(iter, s);

    for(vector<int>::iterator it = v4.begin(); it != v4.end(); it++){
        cout << *it << " ";
    }
    cout << endl;
    
    auto iter1 = unique(v4.begin(), v4.end());
    v4.erase(iter1, v4.end());
    for(vector<int>::iterator it = v4.begin(); it != v4.end(); it++){
        cout << *it << " ";
    }
}